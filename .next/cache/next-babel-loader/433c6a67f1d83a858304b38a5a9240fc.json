{"ast":null,"code":"import { GoogleSpreadsheet } from 'google-spreadsheet';\nimport credentials from '../../credentials.json';\nimport moment from 'moment';\nconst doc = new GoogleSpreadsheet('1RS3tQeiyuF9S25VHOLdkuCCMR8vQncxEuyXYg20wE-M');\nexport default (async (req, res) => {\n  try {\n    await doc.useServiceAccountAuth(credentials);\n    await doc.loadInfo();\n    const sheet = doc.sheetsByIndex[2];\n    const data = JSON.parse(req.body);\n    const sheetConfig = doc.sheetsByIndex[1];\n    await sheetConfig.loadCells('A3:B3');\n    const celpromo = sheetConfig.getCell(2, 0);\n    const celltexto = sheetConfig.getCell(2, 1);\n    let Cupom = '';\n    let Promo = '';\n\n    if (celpromo.value === 'VERDADEIRO') {\n      Cupom = moment().format('DDMMYYYYHHmmSSS');\n      Promo = celltexto.value;\n    }\n\n    await sheet.addRow({\n      Nome: data.Nome,\n      Email: data.Email,\n      Whatsapp: data.Whatsapp,\n      'Data': moment().format('DD/MM/YYYY HH:mm a'),\n      Nota: '5',\n      Cupom,\n      Promo\n    });\n    res.end(req.body);\n  } catch (err) {\n    res.end('error');\n  }\n}); //JSON.parse transforma para objeto","map":{"version":3,"sources":["H:/Projetos/palpit-box/pages/api/save.js"],"names":["GoogleSpreadsheet","credentials","moment","doc","req","res","useServiceAccountAuth","loadInfo","sheet","sheetsByIndex","data","JSON","parse","body","sheetConfig","loadCells","celpromo","getCell","celltexto","Cupom","Promo","value","format","addRow","Nome","Email","Whatsapp","Nota","end","err"],"mappings":"AAAA,SAAQA,iBAAR,QAAgC,oBAAhC;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAGA,MAAMC,GAAG,GAAE,IAAIH,iBAAJ,CAAsB,8CAAtB,CAAX;AAEA,gBAAe,OAAMI,GAAN,EAAUC,GAAV,KAAiB;AAC5B,MAAG;AACC,UAAMF,GAAG,CAACG,qBAAJ,CAA0BL,WAA1B,CAAN;AACA,UAAME,GAAG,CAACI,QAAJ,EAAN;AACA,UAAMC,KAAK,GAAEL,GAAG,CAACM,aAAJ,CAAkB,CAAlB,CAAb;AACA,UAAMC,IAAI,GAAEC,IAAI,CAACC,KAAL,CAAWR,GAAG,CAACS,IAAf,CAAZ;AAEA,UAAMC,WAAW,GAAGX,GAAG,CAACM,aAAJ,CAAkB,CAAlB,CAApB;AACA,UAAMK,WAAW,CAACC,SAAZ,CAAsB,OAAtB,CAAN;AAEA,UAAMC,QAAQ,GAAGF,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAuB,CAAvB,CAAjB;AACA,UAAMC,SAAS,GAAGJ,WAAW,CAACG,OAAZ,CAAoB,CAApB,EAAsB,CAAtB,CAAlB;AAEA,QAAIE,KAAK,GAAE,EAAX;AACA,QAAIC,KAAK,GAAE,EAAX;;AACA,QAAIJ,QAAQ,CAACK,KAAT,KAAmB,YAAvB,EAAoC;AAChCF,MAAAA,KAAK,GAAGjB,MAAM,GAAGoB,MAAT,CAAgB,iBAAhB,CAAR;AACAF,MAAAA,KAAK,GAAGF,SAAS,CAACG,KAAlB;AACH;;AAED,UAAMb,KAAK,CAACe,MAAN,CAAa;AACfC,MAAAA,IAAI,EAAEd,IAAI,CAACc,IADI;AAEfC,MAAAA,KAAK,EAAEf,IAAI,CAACe,KAFG;AAGfC,MAAAA,QAAQ,EAAChB,IAAI,CAACgB,QAHC;AAIf,cAAQxB,MAAM,GAAGoB,MAAT,CAAgB,oBAAhB,CAJO;AAKfK,MAAAA,IAAI,EAAG,GALQ;AAMfR,MAAAA,KANe;AAOfC,MAAAA;AAPe,KAAb,CAAN;AASAf,IAAAA,GAAG,CAACuB,GAAJ,CAAQxB,GAAG,CAACS,IAAZ;AACH,GA7BD,CA6BC,OAAMgB,GAAN,EAAU;AACPxB,IAAAA,GAAG,CAACuB,GAAJ,CAAQ,OAAR;AACH;AACJ,CAjCD,E,CAoCA","sourcesContent":["import {GoogleSpreadsheet} from 'google-spreadsheet'\r\nimport credentials from '../../credentials.json'\r\nimport moment from 'moment'\r\n\r\n\r\nconst doc= new GoogleSpreadsheet('1RS3tQeiyuF9S25VHOLdkuCCMR8vQncxEuyXYg20wE-M')\r\n\r\nexport default async(req,res) =>{\r\n    try{\r\n        await doc.useServiceAccountAuth(credentials)\r\n        await doc.loadInfo()\r\n        const sheet =doc.sheetsByIndex[2]\r\n        const data =JSON.parse(req.body)\r\n\r\n        const sheetConfig = doc.sheetsByIndex[1]\r\n        await sheetConfig.loadCells('A3:B3')\r\n\r\n        const celpromo = sheetConfig.getCell(2 ,0)       \r\n        const celltexto = sheetConfig.getCell(2,1)\r\n\r\n        let Cupom= ''\r\n        let Promo= ''\r\n        if (celpromo.value === 'VERDADEIRO'){\r\n            Cupom = moment().format('DDMMYYYYHHmmSSS')\r\n            Promo = celltexto.value\r\n        }\r\n\r\n        await sheet.addRow({\r\n            Nome :data.Nome,\r\n            Email: data.Email,\r\n            Whatsapp:data.Whatsapp,\r\n            'Data': moment().format('DD/MM/YYYY HH:mm a'),\r\n            Nota : '5',\r\n            Cupom,\r\n            Promo\r\n        })        \r\n        res.end(req.body)\r\n    }catch(err){\r\n        res.end('error') \r\n    }\r\n}\r\n\r\n\r\n//JSON.parse transforma para objeto "]},"metadata":{},"sourceType":"module"}