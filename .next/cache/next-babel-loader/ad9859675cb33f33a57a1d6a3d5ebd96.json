{"ast":null,"code":"//pelo nex pode usar o import\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nimport credentials from '../../credentials.json'; //const { GoogleSpreadsheet } = require('google-spreadsheet')\n//const credentials = require('../../credentials.json')\n\nconst doc = new GoogleSpreadsheet('1RS3tQeiyuF9S25VHOLdkuCCMR8vQncxEuyXYg20wE-M');\nexport default (async (req, res) => {\n  try {\n    await doc.useServiceAccountAuth(credentials);\n    await doc.loadInfo();\n    console.log(doc.title);\n    const sheet = doc.sheetsByIndex[1];\n    await sheet.loadCells('A3:B3');\n    console.log(sheet.title);\n    const cellpromo = sheet.getCell(2, 0); //mostrar promoção\n\n    console.log(cellpromo.value);\n    const celltexto = sheet.getCell(2, 1); // texto da promoção\n\n    console.log(celltexto.value);\n    res.end(JSON.stringify({\n      showCupon: cellpromo.value === 'VERDADEIRO',\n      message: celltexto.value\n    }));\n  } catch (err) {\n    res.end(JSON.stringify({\n      showCupon: false,\n      message: ''\n    }));\n  }\n});","map":{"version":3,"sources":["H:/Projetos/palpit-box/pages/api/get-promo.js"],"names":["GoogleSpreadsheet","credentials","doc","req","res","useServiceAccountAuth","loadInfo","console","log","title","sheet","sheetsByIndex","loadCells","cellpromo","getCell","value","celltexto","end","JSON","stringify","showCupon","message","err"],"mappings":"AACA;AACA,SAAQA,iBAAR,QAAgC,oBAAhC;AACA,OAAOC,WAAP,MAAwB,wBAAxB,C,CAEA;AACA;;AAGA,MAAMC,GAAG,GAAG,IAAIF,iBAAJ,CAAsB,8CAAtB,CAAZ;AAEA,gBAAe,OAAMG,GAAN,EAAUC,GAAV,KAAiB;AAE5B,MAAG;AACC,UAAMF,GAAG,CAACG,qBAAJ,CAA0BJ,WAA1B,CAAN;AACA,UAAMC,GAAG,CAACI,QAAJ,EAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACO,KAAhB;AACA,UAAMC,KAAK,GAAGR,GAAG,CAACS,aAAJ,CAAkB,CAAlB,CAAd;AACA,UAAMD,KAAK,CAACE,SAAN,CAAgB,OAAhB,CAAN;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAK,CAACD,KAAlB;AACA,UAAMI,SAAS,GAAGH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAlB,CAPD,CAOuC;;AACtCP,IAAAA,OAAO,CAACC,GAAR,CAAYK,SAAS,CAACE,KAAtB;AAEA,UAAMC,SAAS,GAAGN,KAAK,CAACI,OAAN,CAAc,CAAd,EAAgB,CAAhB,CAAlB,CAVD,CAUqC;;AACpCP,IAAAA,OAAO,CAACC,GAAR,CAAYQ,SAAS,CAACD,KAAtB;AAEAX,IAAAA,GAAG,CAACa,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,SAAS,EAAGP,SAAS,CAACE,KAAV,KAAoB,YADb;AAEnBM,MAAAA,OAAO,EAAGL,SAAS,CAACD;AAFD,KAAf,CAAR;AAIH,GAjBD,CAiBC,OAAMO,GAAN,EAAU;AACPlB,IAAAA,GAAG,CAACa,GAAJ,CAAQC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,SAAS,EAAG,KADO;AAEnBC,MAAAA,OAAO,EAAM;AAFM,KAAf,CAAR;AAIH;AAEJ,CA1BD","sourcesContent":["\r\n//pelo nex pode usar o import\r\nimport {GoogleSpreadsheet} from 'google-spreadsheet'\r\nimport credentials from '../../credentials.json'\r\n\r\n//const { GoogleSpreadsheet } = require('google-spreadsheet')\r\n//const credentials = require('../../credentials.json')\r\n\r\n\r\nconst doc = new GoogleSpreadsheet('1RS3tQeiyuF9S25VHOLdkuCCMR8vQncxEuyXYg20wE-M')\r\n\r\nexport default async(req,res) =>{\r\n\r\n    try{\r\n        await doc.useServiceAccountAuth(credentials)\r\n        await doc.loadInfo()\r\n        console.log(doc.title)\r\n        const sheet = doc.sheetsByIndex[1]\r\n        await sheet.loadCells('A3:B3')\r\n        console.log(sheet.title)\r\n        const cellpromo = sheet.getCell(2 ,0) //mostrar promoção\r\n        console.log(cellpromo.value)\r\n    \r\n        const celltexto = sheet.getCell(2,1)// texto da promoção\r\n        console.log(celltexto.value)\r\n\r\n        res.end(JSON.stringify({\r\n            showCupon : cellpromo.value === 'VERDADEIRO',\r\n            message : celltexto.value\r\n        }))\r\n    }catch(err){\r\n        res.end(JSON.stringify({\r\n            showCupon : false,\r\n            message :    ''    \r\n       }))\r\n    }\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}